$date
	Sun Sep  6 12:27:21 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Test2 $end
$var reg 1 ! clk1 $end
$var reg 1 " clk2 $end
$var integer 32 # k [31:0] $end
$scope module mips_testing2 $end
$var wire 1 ! clk1 $end
$var wire 1 " clk2 $end
$var reg 32 $ EX_MEM_ALUOut [31:0] $end
$var reg 32 % EX_MEM_B [31:0] $end
$var reg 32 & EX_MEM_IR [31:0] $end
$var reg 1 ' EX_MEM_cond $end
$var reg 3 ( EX_MEM_type [2:0] $end
$var reg 1 ) HALTED $end
$var reg 32 * ID_EX_A [31:0] $end
$var reg 32 + ID_EX_B [31:0] $end
$var reg 32 , ID_EX_IR [31:0] $end
$var reg 32 - ID_EX_Imm [31:0] $end
$var reg 32 . ID_EX_NPC [31:0] $end
$var reg 3 / ID_EX_type [2:0] $end
$var reg 32 0 IF_ID_IR [31:0] $end
$var reg 32 1 IF_ID_NPC [31:0] $end
$var reg 32 2 MEM_WB_ALUOut [31:0] $end
$var reg 32 3 MEM_WB_IR [31:0] $end
$var reg 32 4 MEM_WB_LMD [31:0] $end
$var reg 3 5 MEM_WB_type [2:0] $end
$var reg 32 6 PC [31:0] $end
$var reg 1 7 TAKEN_BRANCH $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
07
b0 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
0)
bx (
x'
bx &
bx %
bx $
b11111 #
0"
0!
$end
#5
b1 6
b1 1
b101000000000010000000001111000 0
1!
#10
0!
#15
b1 /
b1111000 -
b101000000000010000000001111000 ,
b1 .
b1 +
b0 *
1"
#20
0"
#25
b1111000 $
b101000000000010000000001111000 &
b1 (
b10 6
b10 1
b1100011000110001100000000000 0
1!
#30
0!
#35
b1111000 2
b101000000000010000000001111000 3
b1 5
b0 /
b1100000000000 -
b1100011000110001100000000000 ,
b10 .
b11 +
b11 *
1"
#40
0"
#45
b11 6
b11 1
b100000001000100000000000000000 0
b11 $
b1100011000110001100000000000 &
b0 (
1!
#50
0!
#55
b10 /
b0 -
b100000001000100000000000000000 ,
b11 .
b10 +
b1111000 *
b11 2
b1100011000110001100000000000 3
b0 5
1"
#60
0"
#65
b10 %
b1111000 $
b100000001000100000000000000000 &
b10 (
b100 6
b100 1
b1100011000110001100000000000 0
1!
#70
0!
#75
b1010101 4
b100000001000100000000000000000 3
b10 5
b0 /
b1100000000000 -
b1100011000110001100000000000 ,
b100 .
b11 +
b11 *
1"
#80
0"
#85
b101 6
b101 1
b101000010000100000000000101101 0
b11 $
b1100011000110001100000000000 &
b0 (
1!
#90
0!
#95
b1 /
b101101 -
b101000010000100000000000101101 ,
b101 .
b1010101 +
b1010101 *
b1100011000110001100000000000 3
b0 5
1"
#100
0"
#105
b10000010 $
b101000010000100000000000101101 &
b1 (
b110 6
b110 1
b1100011000110001100000000000 0
1!
#110
0!
#115
b10000010 2
b101000010000100000000000101101 3
b1 5
b0 /
b1100000000000 -
b1100011000110001100000000000 ,
b110 .
b11 +
b11 *
1"
#120
0"
#125
b111 6
b111 1
b100100001000100000000000000001 0
b11 $
b1100011000110001100000000000 &
b0 (
1!
#130
0!
#135
b11 /
b1 -
b100100001000100000000000000001 ,
b111 .
b10000010 +
b1111000 *
b11 2
b1100011000110001100000000000 3
b0 5
1"
#140
0"
#145
b10000010 %
b1111001 $
b100100001000100000000000000001 &
b11 (
b1000 6
b1000 1
b11111100000000000000000000000000 0
1!
#150
0!
#155
b100100001000100000000000000001 3
b11 5
b101 /
b0 -
b11111100000000000000000000000000 ,
b1000 .
b0 +
b0 *
1"
#160
0"
#165
b1001 6
b1001 1
bx 0
b11111100000000000000000000000000 &
b101 (
1!
#170
0!
#175
bx -
bx ,
b1001 .
bx +
bx *
bx 2
b11111100000000000000000000000000 3
b101 5
1"
#180
0"
#185
1)
bx &
b1010 6
b1010 1
1!
#190
0!
#195
1"
#200
0"
#205
1!
#210
0!
#215
1"
#220
0"
#225
1!
#230
0!
#235
1"
#240
0"
#245
1!
#250
0!
#255
1"
#260
0"
#265
1!
#270
0!
#275
1"
#280
0"
#285
1!
#290
0!
#295
1"
#300
0"
#305
1!
#310
0!
#315
1"
#320
0"
#325
1!
#330
0!
#335
1"
#340
0"
#345
1!
#350
0!
#355
1"
#360
0"
#365
1!
#370
0!
#375
1"
#380
0"
#385
1!
#390
0!
#395
1"
#400
0"
#405
1!
#410
0!
#415
1"
#420
0"
#425
1!
#430
0!
#435
1"
#440
0"
#445
1!
#450
0!
#455
1"
#460
0"
#465
1!
#470
0!
#475
1"
#480
0"
#485
1!
#490
0!
#495
1"
#500
0"
#505
1!
#510
0!
#515
1"
#520
0"
#525
1!
#530
0!
#535
1"
#540
0"
#545
1!
#550
0!
#555
1"
#560
0"
#565
1!
#570
0!
#575
1"
#580
0"
#585
1!
#590
0!
#595
1"
#600
0"
